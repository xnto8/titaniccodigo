# -*- coding: utf-8 -*-
"""Untitled12.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1-d_DKwEXY4gkFfU6qqvsZF83ZZ6TMhzZ
"""

import streamlit as st
import pandas as pd
import matplotlib.pyplot as plt
import altair as alt

st.title("Aplicacion de analisis de datos")
uploaded_file = st.file_uploader("subir archivo CSV", type=["csv"])

if uploaded_file is not None:
    df = pd.read_csv(uploaded_file)
    st.write("estructura del DataFrame:")
    # Assuming you meant df.describe() instead of dfdescribe()
    st.write(df.describe())
    col = st.selectbox("seleccionar una columna para filtrar", df.columns)
    valor_min = st.slider("seleccionar un valor minimo", float(df[col].min()), float(df[col].max()))
    df_filtrado = df[df[col] >= valor_min]
    st.write(f" Datos filtrados donde {col} >= {valor_min}:")
    st.write(df_filtrado)

# Move this block inside the 'if uploaded_file is not None:' condition
if uploaded_file is not None:
    fig, ax = plt.subplots()
    ax.hist(df[col], bins=20)
    ax.set_title(f"Histograma de {col}")
    ax.set_xlabel(col)
    ax.set_ylabel("Frecuencia")
    st.pyplot(fig)

    x_axis = st.selectbox("selecciona el eje x", df.select_dtypes(include="number").columns)
    y_axis = st.selectbox("selecciona el eje y", df.select_dtypes(include="number").columns)
    # Fixed: tooltip=[x_axis, y_axis] to tooltip=[x_axis, y_axis]
    chart = alt.Chart(df).mark_circle(size=60).encode(
        x=x_axis,
        y=y_axis,
        tooltip=[x_axis, y_axis]
    ).interactive()
    st.altair_chart(chart, use_container_width=True)
